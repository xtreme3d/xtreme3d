<HTML>
<HEAD>
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<TITLE>VerletWorld</TITLE>
<LINK href="../data/style.css" type=text/css rel=stylesheet>
</HEAD>
<BODY>

<DIV ALIGN=justify>

<H1 class=pagetitle>Verlet World</H1>

<A class=type>Класс: TVerletWorld, TVFGravity, TEdgeDetector, TVCFloor, TVCSphere, TVCCylinder, TVCCube, TVCCapsule, TVFAirResistance.  -</A><BR><BR>

<A>Verlet World - это физический движок для симуляции мягких тел (таких, как ткань, веревка, волосы, желе и др.). Мягкие тела видут себя, как в реальной жизни: например, ткань может колыхаться от ветра с учетом силы гравитациии и других свойств (прыгучесть, вес, инерция). Также мягкие тела могут сталкиваться со статическими твердыми поверхностями (Constraint) различных форм: плоскость, параллелепипед, сфера, цилиндр, капсула (к сожалению, поддержки Freeform нет). VerletNode - это узлы (вершины меша) мягких тел, с помощью которых можно частично манипулировать мягким телом. 
<BR>
Verlet World - очень конфликтный движок. Когда присутствуют слишком большие значения в аргументах функций, движок начнет "ломаться". Например, если задать узлам мягкого тела маленький вес и при этом активировать сильный ветер, мягкие тела начнут вести себя неестественно и произойдет ошибка, поэтому не прибегайте к поспешным выводам, если движок зависнет. Поэкспериментируйте с параметрами, и проблема устранится.
</A>

<HR>

<A name="VerletWorldCreate"></A>
<H1 class=name>VerletWorldCreate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletWorldCreate</A><A>( Iterations, UpdateSpacePartion, Drag as </A><A class=type>real</A><A> );</A>
<BR><A>Создает новый физический мир Verlet и возвращает его id. </A>
<BR><A>Iterations - качество симуляции мира. Рекомендуется выставлять значение в диапазоне от 0.0 до 30.</A>
<BR><A>UpdateSpacePartion - режим обновления пространства. </A><A class=constant>uspEveryIteration</A><A>, </A><A class=constant>uspEveryFrame</A><A>, </A><A class=constant>uspNever</A><A>.  </A>
<BR><A>Drag - сведения отсутствуют.</A>
<HR>

<A name="VerletWorldCreateOctree"></A>
<H1 class=name>VerletWorldCreateOctree</H1>
<A class=type>real</A><A> = </A><A class=function>VerletWorldCreateOctree</A><A>( VerletWorld, xmin,ymin,zmin,xmax,ymax,zmax,LeafThreshold, MaxTreeDepth as </A><A class=type>real</A><A> );</A>
<BR><A>Создает октарное дерево для мира Verlet. </A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>xmin,ymin,zmin - сведения отсутствуют.  </A>
<BR><A>xmax,ymax,zmax - сведения отсутствуют.  </A>
<BR><A>LeafThreshold - сведения отсутствуют.  </A>
<BR><A>MaxTreeDepth - сведения отсутствуют.  </A>
<HR>

<A name="VerletWorldGravityCreate"></A>
<H1 class=name>VerletWorldGravityCreate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletWorldGravityCreate</A><A>( VerletWorld,xDir,yDir,zDir as </A><A class=type>real</A><A> );</A>
<BR><A>Добавляет силу гравитации в Verlet-мир и возвращает его id.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>xDir,yDir,zDir - направление гравитации, то есть в какую сторону будет притягивать тела.</A>
<HR>

<A name="VerletWorldGravitySetDirection"></A>
<H1 class=name>VerletWorldGravitySetDirection</H1>
<A class=type>real</A><A> = </A><A class=function>VerletWorldGravitySetDirection</A><A>( Gravity,xDir,yDir,zDir as </A><A class=type>real</A><A> );</A>
<BR><A>Задает направление гравитации.</A>
<BR><A>Gravity - id силы гравитации.</A>
<BR><A>xDir,yDir,zDir - направление гравитации (в какую сторону будут притягиваться тела).</A>
<HR>

<A name="VerletWorldUpdate"></A>
<H1 class=name>VerletWorldUpdate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletWorldUpdate</A><A>( VerletWorld,newTime as </A><A class=type>real</A><A> );</A>
<BR><A>Обновляет все состояния Verlet-мира.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>newTime - сведения отсутствуют.</A>
<HR>

<A name="VerletWorldSetMaxDeltaTime"></A>
<H1 class=name>VerletWorldSetMaxDeltaTime</H1>
<A class=type>real</A><A> = </A><A class=function>VerletWorldSetMaxDeltaTime</A><A>( VerletWorld,maxTime as </A><A class=type>real</A><A> );</A>
<BR><A>Задает скорость обновления мира.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>maxTime - скорость обновления мира. Рекомендуется задавать значение в диапазоне от 0.001 до 0.07.</A>
<HR>

<A name="VerletWorldSetSimTime"></A>
<H1 class=name>VerletWorldSetSimTime</H1>
<A class=type>real</A><A> = </A><A class=function>VerletWorldSetSimTime</A><A>( VerletWorld,time as </A><A class=type>real</A><A> );</A>
<BR><A>Сведения отсутствуют.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>time - сведения отсутствуют.</A>
<HR>

<A name="VerletAirResistanceCreate"></A>
<H1 class=name>VerletAirResistanceCreate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletAirResistanceCreate</A><A>( VerletWorld, Magnitudе, Chaos as </A><A class=type>real</A><A> );</A>
<BR><A>Создает и добавляет ветер в Verlet-мир, возвращая его id.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>Magnitudе - скорость ветра. Значение от 0 до 10.</A>
<BR><A>Chaos - шум и сила ветра.</A>
<HR>

<A name="VerletAirResistanceSetWindDirection"></A>
<H1 class=name>VerletAirResistanceSetWindDirection</H1>
<A class=type>real</A><A> = </A><A class=function>VerletAirResistanceSetWindDirection</A><A>( AirResistance, x, y, z as </A><A class=type>real</A><A> );</A>
<BR><A>Задает направление ветра.</A>
<BR><A>AirResistance - id ветра.</A>
<BR><A>x,y,z - направление ветра.</A>
<HR>

<A name="VerletAirResistanceSetWindMagnitude"></A>
<H1 class=name>VerletAirResistanceSetWindMagnitude</H1>
<A class=type>real</A><A> = </A><A class=function>VerletAirResistanceSetWindMagnitude</A><A>( AirResistance, Magnitudе as </A><A class=type>real</A><A> );</A>
<BR><A>Задает скорость ветра.</A>
<BR><A>AirResistance - id ветра.</A>
<BR><A>Magnitudе - скорость.</A>
<HR>

<A name="VerletAirResistanceSetWindChaos"></A>
<H1 class=name>VerletAirResistanceSetWindChaos</H1>
<A class=type>real</A><A> = </A><A class=function>VerletAirResistanceSetWindChaos</A><A>( AirResistance, Chaos as </A><A class=type>real</A><A> );</A>
<BR><A>Задает шум и силу ветра.</A>
<BR><A>AirResistance - id ветра.</A>
<BR><A>Chaos - шум и сила ветра.</A>
<HR>

<A name="VerletEdgeDetectorCreate"></A>
<H1 class=name>VerletEdgeDetectorCreate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletEdgeDetectorCreate</A><A>( VerletWorld, obj as </A><A class=type>real</A><A> );</A>
<BR><A>Задает мягкое тело в Verlet-мире и возвращает его id. После этого объект (obj) начнет ввести себя, как ткань.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>obj - id объекта.</A>
<HR>

<A name="VerletEdgeDetectorSetWeldDistance"></A>
<H1 class=name>VerletEdgeDetectorSetWeldDistance</H1>
<A class=type>real</A><A> = </A><A class=function>VerletEdgeDetectorSetWeldDistance</A><A>( EdgeDetector, dis as </A><A class=type>real</A><A> );</A>
<BR><A>Сведения отсутствуют.</A>
<BR><A>EdgeDetector - id мягкого тела.</A>
<BR><A>dis - сведения отсутствуют.</A>
<HR>

<A name="VerletConstraintFloorCreate"></A>
<H1 class=name>VerletConstraintFloorCreate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintFloorCreate</A><A>( VerletWorld, BounceRatio, FloorLevel as </A><A class=type>real</A><A> );</A>
<BR><A>Создает твердую поверхность в виде плоскости и возвращает ее id.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>BounceRatio - пружинистость поверхности.</A>
<BR><A>FloorLevel - уровень высоты столкновения мягких тел. Например, если видно, как ткань проходит сквозь поверхность, этим параметром можно убрать подобный артефакт, указав значение > 1.</A>
<HR>

<A name="VerletConstraintFloorSetNormal"></A>
<H1 class=name>VerletConstraintFloorSetNormal</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintFloorSetNormal</A><A>( ConstraintFloor, xn,yn,zn as </A><A class=type>real</A><A> );</A>
<BR><A>Задает направление нормали твердой поверхности.</A>
<BR><A>ConstraintFloor - id поверхности.</A>
<BR><A>xn,yn,zn - направление.</A>
<HR>

<A name="VerletConstraintFloorSetObjectLocations"></A>
<H1 class=name>VerletConstraintFloorSetObjectLocations</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintFloorSetObjectLocations</A><A>( ConstraintFloor, obj as </A><A class=type>real</A><A> );</A>
<BR><A>Применяет к твердой поверхности данные положения и вращения объекта (obj).</A>
<BR><A>ConstraintFloor - id поверхности.</A>
<BR><A>obj - id объекта.</A>
<HR>

<A name="VerletConstraintSphereCreate"></A>
<H1 class=name>VerletConstraintSphereCreate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintSphereCreate</A><A>( VerletWorld, rad as </A><A class=type>real</A><A> );</A>
<BR><A>Создает твердую поверхность в виде сферы и возвращает ее id.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>rad - радиус сферы.</A>
<HR>

<A name="VerletConstraintCylinderCreate"></A>
<H1 class=name>VerletConstraintCylinderCreate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintCylinderCreate</A><A>( VerletWorld, rad as </A><A class=type>real</A><A> );</A>
<BR><A>Создает твердую поверхность в виде цилиндра и возвращает ее id.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>rad - радиус цилиндра.</A>
<HR>

<A name="VerletConstraintCylinderSetAxis"></A>
<H1 class=name>VerletConstraintCylinderSetAxis</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintCylinderSetAxis</A><A>( ConstraintCylinder, xd,yd,zd as </A><A class=type>real</A><A> );</A>
<BR><A>Задает направление цилиндра.</A>
<BR><A>ConstraintCylinder - id цилиндра.</A>
<BR><A>xd,yd,zd - направление.</A>
<HR>

<A name="VerletConstraintCubeCreate"></A>
<H1 class=name>VerletConstraintCubeCreate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintCubeCreate</A><A>( VerletWorld, x,y,z as </A><A class=type>real</A><A> );</A>
<BR><A>Создает твердую поверхность в виде куба и возвращает ее id.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>x,y,z - Размер куба.</A>
<HR>

<A name="VerletConstraintCubeCreateSetCube"></A>
<H1 class=name>VerletConstraintCubeCreateSetCube</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintCubeCreateSetCube</A><A>( VerletWorld,cube as </A><A class=type>real</A><A> );</A>
<BR><A>Создает твердую поверхность в виде куба, копируя данные куба примитива (положение, размер), и возвращает его id.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>cube - id примитива куба.</A>
<HR>

<A name="VerletConstraintCubeSetDirection"></A>
<H1 class=name>VerletConstraintCubeSetDirection</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintCubeSetDirection</A><A>( ConstraintCube, x,y,z as </A><A class=type>real</A><A> );</A>
<BR><A>Задает направление куба.</A>
<BR><A>ConstraintCube - id куба.</A>
<BR><A>x,y,z - направление.</A>
<HR>

<A name="VerletConstraintCapsuleCreate"></A>
<H1 class=name>VerletConstraintCapsuleCreate</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintCapsuleCreate</A><A>( VerletWorld, rad,len as </A><A class=type>real</A><A> );</A>
<BR><A>Создает твердую поверхность в виде капсулы и возвращает ее id.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>rad - радиус капсулы.</A>
<BR><A>len - длина капсулы.</A>
<HR>

<A name="VerletConstraintCapsuleSetAxis"></A>
<H1 class=name>VerletConstraintCapsuleSetAxis</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintCapsuleSetAxis</A><A>( ConstraintCapsule, x,y,z as </A><A class=type>real</A><A> );</A>
<BR><A>Задает направление капсулы.</A>
<BR><A>ConstraintCapsule - id капсулы.</A>
<BR><A>x,y,z - направление.</A>
<HR>

<A name="VerletConstraintSetPosition"></A>
<H1 class=name>VerletConstraintSetPosition</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintSetPosition</A><A>( Constraint, x,y,z as </A><A class=type>real</A><A> );</A>
<BR><A>Перемещает твердую поверхность.</A>
<BR><A>Constraint - id поверхности.</A>
<BR><A>x,y,z - положение в пространстве.</A>
<HR>

<A name="VerletConstraintSetFrictionRatio"></A>
<H1 class=name>VerletConstraintSetFrictionRatio</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintSetFrictionRatio</A><A>( Constraint, fr as </A><A class=type>real</A><A> );</A>
<BR><A>Задает силу трения поверхности - насколько сильно мягкие тела будут скользить по этой поверхности.</A>
<BR><A>Constraint - id поверхности.</A>
<BR><A>fr - сила трения.</A>
<HR>

<A name="VerletConstraintSetEnabled"></A>
<H1 class=name>VerletConstraintSetEnabled</H1>
<A class=type>real</A><A> = </A><A class=function>VerletConstraintSetEnabled</A><A>( Constraint, enable as </A><A class=type>real</A><A> );</A>
<BR><A>Включает или выключает твердую поверхность в Verlet-мире.</A>
<BR><A>Constraint - id поверхности.</A>
<BR><A>enable - </A><A class=constant>true</A><A> или </A><A class=constant>false</A><A>.</A>
<HR>

<A name="VerletGetNodeCount"></A>
<H1 class=name>VerletGetNodeCount</H1>
<A class=type>real</A><A> = </A><A class=function>VerletGetNodeCount</A><A>( VerletWorld as </A><A class=type>real</A><A> );</A>
<BR><A>Возвращает общее количество узлов в Verlet-мире.</A>
<BR><A>VerletWorld - id мира.</A>
<HR>

<A name="VerletNodeNailedDown"></A>
<H1 class=name>VerletNodeNailedDown</H1>
<A class=type>real</A><A> = </A><A class=function>VerletNodeNailedDown</A><A>( VerletWorld, nodeIndex,enable as </A><A class=type>real</A><A> );</A>
<BR><A>Закрепляет или открепляет узел мягкого тела в пространстве.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>nodeIndex - индекс узла (вершины).</A>
<BR><A>enable - </A><A class=constant>true</A><A> или </A><A class=constant>false</A><A>.</A>
<HR>

<A name="VerletNodeSetPosition"></A>
<H1 class=name>VerletNodeSetPosition</H1>
<A class=type>real</A><A> = </A><A class=function>VerletNodeSetPosition</A><A>( VerletWorld, nodeIndex,x,y,z as </A><A class=type>real</A><A> );</A>
<BR><A>Тянет узел мягкого тело в позицию x, y, z.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>nodeIndex - индекс узла (вершины).</A>
<BR><A>x,y,z - положение в пространстве.</A>
<HR>

<A name="VerletNodeSetRadius"></A>
<H1 class=name>VerletNodeSetRadius</H1>
<A class=type>real</A><A> = </A><A class=function>VerletNodeSetRadius</A><A>( VerletWorld, nodeIndex,rad as </A><A class=type>real</A><A> );</A>
<BR><A>Задает радиус столкновения узла с твердыми поверхностями.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>nodeIndex - индекс узла (вершины).</A>
<BR><A>rad - радиус.</A>
<HR>

<A name="VerletNodeSetFriction"></A>
<H1 class=name>VerletNodeSetFriction</H1>
<A class=type>real</A><A> = </A><A class=function>VerletNodeSetFriction</A><A>( VerletWorld, nodeIndex,fr as </A><A class=type>real</A><A> );</A>
<BR><A>Задает силу трения узла по твердым поверхностям.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>nodeIndex - индекс узла (вершины).</A>
<BR><A>fr - сила трения.</A>
<HR>

<A name="VerletNodeSetWeight"></A>
<H1 class=name>VerletNodeSetWeight</H1>
<A class=type>real</A><A> = </A><A class=function>VerletNodeSetWeight</A><A>( VerletWorld, nodeIndex,weight as </A><A class=type>real</A><A> );</A>
<BR><A>Задает вес узла.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>nodeIndex - индекс узла (вершины).</A>
<BR><A>weight - вес.</A>
<HR>

<A name="VerletNodeApplyFriction"></A>
<H1 class=name>VerletNodeApplyFriction</H1>
<A class=type>real</A><A> = </A><A class=function>VerletNodeApplyFriction</A><A>( VerletWorld, nodeIndex, friction, penetrationDepth,x,y,z as </A><A class=type>real</A><A> );</A>
<BR><A>Применяет силу толчка к узлу.</A>
<BR><A>VerletWorld - id мира.</A>
<BR><A>nodeIndex - индекс узла (вершины).</A>
<BR><A>friction - сведения отсутствуют.</A>
<BR><A>penetrationDepth - сведения отсутствуют.</A>
<BR><A>x,y,z - направление толчка.</A>
<HR>



</DIV>

</BODY>
</HTML>
